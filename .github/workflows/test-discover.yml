name: OVS Layer 2 Switch CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  prepare-vm:
    name: Prepare VM Image
    runs-on: ubuntu-latest
    env:
      IMAGE_URL: https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-latest.x86_64.qcow2
    outputs:
      vm_image: ${{ steps.set-env.outputs.vm_image }}
      ssh_port: ${{ steps.set-env.outputs.ssh_port }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Ensure vm-images directory exists
        run: mkdir -p vm-images

      - name: Download, verify, and prepare VM image
        id: set-env
        run: |
          set -e

          if [[ -z "$IMAGE_URL" ]]; then
              echo "❌ IMAGE_URL is not set"
              exit 1
          fi

          IMAGE_FILE="vm-images/$(basename "$IMAGE_URL")"
          WORK_IMAGE="vm-images/test-$(basename "$IMAGE_URL" .qcow2)-$(date +%s).qcow2"

          if [[ ! -f "$IMAGE_FILE" ]]; then
              echo "Downloading VM image..."
              curl -L --fail -o "$IMAGE_FILE" "$IMAGE_URL"
          else
              echo "Using cached image: $IMAGE_FILE"
          fi

          echo "Verifying image..."
          qemu-img info "$IMAGE_FILE" || { echo "❌ Invalid image file"; exit 1; }

          cp "$IMAGE_FILE" "$WORK_IMAGE"
          qemu-img resize "$WORK_IMAGE" 10G

          echo "VM_IMAGE=$WORK_IMAGE" >> $GITHUB_ENV
          echo "SSH_PORT=$((2220 + RANDOM % 100))" >> $GITHUB_ENV

          # Set outputs for downstream jobs
          echo "vm_image=$WORK_IMAGE" >> $GITHUB_OUTPUT
          echo "ssh_port=$SSH_PORT" >> $GITHUB_OUTPUT

  run-tests:
    name: Run OVS Tests
    runs-on: ubuntu-latest
    needs: prepare-vm
    env:
      VM_IMAGE: ${{ needs.prepare-vm.outputs.vm_image }}
      SSH_PORT: ${{ needs.prepare-vm.outputs.ssh_port }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Display VM info
        run: |
          echo "✅ Using VM image: $VM_IMAGE"
          echo "SSH Port: $SSH_PORT"
          qemu-img info "$VM_IMAGE"

      - name: Run discovery and switch tests
        run: |
          set -e
          # Example: run your test script here
          sudo bash ./scripts/test-discover-interfaces.sh
          sudo bash ./scripts/test-discover.yaml